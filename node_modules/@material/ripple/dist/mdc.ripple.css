/*!
 Material Components for the web
 Copyright (c) 2017 Google Inc.
 License: Apache-2.0
*/
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/**
 * Applies the correct theme color style to the specified property.
 * $property is typically color or background-color, but can be any CSS property that accepts color values.
 * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).
 */
/**
 * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.
 * Should provide the $root-selector option if applied to anything other than the root selector.
 * When used with a modifier class, provide a second argument of `true` for the $compound parameter
 * to specify that this should be attached as a compound class.
 *
 * Usage example:
 *
 * ```scss
 * .mdc-foo {
 *   color: black;
 *
 *   @include mdc-theme-dark {
 *     color: white;
 *   }
 *
 *   &__bar {
 *     background: black;
 *
 *     @include mdc-theme-dark(".mdc-foo") {
 *       background: white;
 *     }
 *   }
 * }
 *
 * .mdc-foo--disabled {
 *   opacity: .38;
 *
 *   @include mdc-theme-dark(".mdc-foo", true) {
 *     opacity: .5;
 *   }
 * }
 * ```
 */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
  Precomputed linear color channel values, for use in contrast calculations.
  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests

  Algorithm, for c in 0 to 255:
  f(c) {
    c = c / 255;
    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  }

  This lookup table is needed since there is no `pow` in SASS.
*/
/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
/*
  Main theme colors.
  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.
*/
/* Indigo 500 */
/* Pink A200 */
/* White */
/* Which set of text colors to use for each main theme color (light or dark) */
/* Text colors according to light vs dark and text type */
/* Primary text colors for each of the theme colors */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */
/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@-webkit-keyframes mdc-ripple-fg-radius-in {
  from {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start)) scale(1);
            transform: translate(var(--mdc-ripple-fg-translate-start)) scale(1);
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  to {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end)) scale(var(--mdc-ripple-fg-scale));
            transform: translate(var(--mdc-ripple-fg-translate-end)) scale(var(--mdc-ripple-fg-scale)); } }
@keyframes mdc-ripple-fg-radius-in {
  from {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start)) scale(1);
            transform: translate(var(--mdc-ripple-fg-translate-start)) scale(1);
    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  to {
    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end)) scale(var(--mdc-ripple-fg-scale));
            transform: translate(var(--mdc-ripple-fg-translate-end)) scale(var(--mdc-ripple-fg-scale)); } }

@-webkit-keyframes mdc-ripple-fg-opacity-out {
  from {
    opacity: 1;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 0; } }

@keyframes mdc-ripple-fg-opacity-out {
  from {
    opacity: 1;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear; }
  to {
    opacity: 0; } }

@-webkit-keyframes mdc-ripple-fg-unbounded-opacity-deactivate {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@keyframes mdc-ripple-fg-unbounded-opacity-deactivate {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@-webkit-keyframes mdc-ripple-fg-unbounded-transform-deactivate {
  from {
    -webkit-transform: var(--mdc-ripple-fg-approx-xf);
            transform: var(--mdc-ripple-fg-approx-xf); }
  to {
    -webkit-transform: scale(var(--mdc-ripple-fg-scale));
            transform: scale(var(--mdc-ripple-fg-scale)); } }

@keyframes mdc-ripple-fg-unbounded-transform-deactivate {
  from {
    -webkit-transform: var(--mdc-ripple-fg-approx-xf);
            transform: var(--mdc-ripple-fg-approx-xf); }
  to {
    -webkit-transform: scale(var(--mdc-ripple-fg-scale));
            transform: scale(var(--mdc-ripple-fg-scale)); } }

.mdc-ripple-surface {
  position: relative;
  outline: none;
  overflow: hidden; }
  .mdc-ripple-surface[data-mdc-ripple-is-unbounded] {
    overflow: visible; }
  .mdc-ripple-surface::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    -webkit-transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);
    transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);
    border-radius: inherit;
    background: currentColor;
    content: "";
    opacity: 0; }
  .mdc-ripple-surface:focus::before {
    opacity: .12; }
  .mdc-ripple-surface:active::before {
    opacity: .18; }
  .mdc-ripple-surface.mdc-ripple-upgraded {
    --mdc-ripple-left: 0;
    --mdc-ripple-top: 0;
    --mdc-ripple-fg-size: 0;
    --mdc-ripple-surface-height: 0;
    --mdc-ripple-surface-width: 0;
    --mdc-ripple-fg-unbounded-transform-duration: 0ms;
    --mdc-ripple-xfo-x: center;
    --mdc-ripple-xfo-y: center;
    --mdc-ripple-fg-unbounded-opacity-duration: 0ms;
    --mdc-ripple-fg-unbounded-transform-duration: 0ms;
    --mdc-ripple-fg-approx-xf: 0;
    will-change: transition, opacity;
    -webkit-tap-highlight-color: transparent; }
    .mdc-ripple-surface.mdc-ripple-upgraded::before {
      background-color: rgba(0, 0, 0, 0.06);
      position: absolute;
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      -webkit-transform: scale(var(--mdc-ripple-fg-scale));
              transform: scale(var(--mdc-ripple-fg-scale));
      -webkit-transition: opacity 200ms linear;
      transition: opacity 200ms linear;
      border-radius: 50%;
      opacity: 0;
      pointer-events: none;
      content: ""; }
    .mdc-ripple-surface.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active::before {
      opacity: .99999; }
    .mdc-ripple-surface.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active:active::before {
      -webkit-transition-duration: 600ms;
              transition-duration: 600ms; }
    .mdc-ripple-surface.mdc-ripple-upgraded.mdc-ripple-upgraded--background-bounded-active-fill::before {
      -webkit-transition-duration: 120ms;
              transition-duration: 120ms;
      opacity: 1; }
    .mdc-ripple-surface.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before {
      top: var(--mdc-ripple-top);
      left: var(--mdc-ripple-left);
      width: var(--mdc-ripple-fg-size);
      height: var(--mdc-ripple-fg-size); }
    .mdc-ripple-surface.mdc-ripple-upgraded::after {
      background-color: rgba(0, 0, 0, 0.06);
      position: absolute;
      top: 0;
      left: 0;
      width: var(--mdc-ripple-fg-size);
      height: var(--mdc-ripple-fg-size);
      -webkit-transform: scale(0);
              transform: scale(0);
      -webkit-transform-origin: center center;
              transform-origin: center center;
      border-radius: 50%;
      opacity: 0;
      pointer-events: none;
      content: ""; }
    .mdc-ripple-surface.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after {
      -webkit-transform-origin: center center;
              transform-origin: center center; }
    .mdc-ripple-surface.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after {
      top: var(--mdc-ripple-top);
      left: var(--mdc-ripple-left);
      -webkit-transform-origin: center center;
              transform-origin: center center; }
    .mdc-ripple-surface.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-bounded-active-fill::after {
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards;
      -webkit-animation: 300ms mdc-ripple-fg-radius-in, 400ms mdc-ripple-fg-opacity-out;
              animation: 300ms mdc-ripple-fg-radius-in, 400ms mdc-ripple-fg-opacity-out; }
    .mdc-ripple-surface.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded--foreground-unbounded-activation::after {
      -webkit-transform: scale(var(--mdc-ripple-fg-scale));
              transform: scale(var(--mdc-ripple-fg-scale));
      -webkit-transition: opacity 110ms linear, -webkit-transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
      transition: opacity 110ms linear, -webkit-transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
      transition: opacity 110ms linear, transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
      transition: opacity 110ms linear, transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms, -webkit-transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
      opacity: 1; }
    .mdc-ripple-surface.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded--foreground-unbounded-deactivation::after {
      -webkit-animation: mdc-ripple-fg-unbounded-opacity-deactivate var(--mdc-ripple-fg-unbounded-opacity-duration) linear, mdc-ripple-fg-unbounded-transform-deactivate var(--mdc-ripple-fg-unbounded-transform-duration) cubic-bezier(0.4, 0, 0.2, 1);
              animation: mdc-ripple-fg-unbounded-opacity-deactivate var(--mdc-ripple-fg-unbounded-opacity-duration) linear, mdc-ripple-fg-unbounded-transform-deactivate var(--mdc-ripple-fg-unbounded-transform-duration) cubic-bezier(0.4, 0, 0.2, 1); }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded::before, .mdc-ripple-surface--primary.mdc-ripple-upgraded::after {
    background-color: #3f51b5;
    background-color: var(--mdc-theme-primary, #3f51b5); }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded::before {
    background-color: rgba(63, 81, 181, 0.14);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transform: scale(var(--mdc-ripple-fg-scale));
            transform: scale(var(--mdc-ripple-fg-scale));
    -webkit-transition: opacity 200ms linear;
    transition: opacity 200ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
    @supports (background-color: color(green a(10%))) {
      .mdc-ripple-surface--primary.mdc-ripple-upgraded::before {
        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active::before {
    opacity: .99999; }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active:active::before {
    -webkit-transition-duration: 600ms;
            transition-duration: 600ms; }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded.mdc-ripple-upgraded--background-bounded-active-fill::before {
    -webkit-transition-duration: 120ms;
            transition-duration: 120ms;
    opacity: 1; }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before {
    top: var(--mdc-ripple-top);
    left: var(--mdc-ripple-left);
    width: var(--mdc-ripple-fg-size);
    height: var(--mdc-ripple-fg-size); }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded::after {
    background-color: rgba(63, 81, 181, 0.14);
    position: absolute;
    top: 0;
    left: 0;
    width: var(--mdc-ripple-fg-size);
    height: var(--mdc-ripple-fg-size);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
    @supports (background-color: color(green a(10%))) {
      .mdc-ripple-surface--primary.mdc-ripple-upgraded::after {
        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after {
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top);
    left: var(--mdc-ripple-left);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-bounded-active-fill::after {
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards;
    -webkit-animation: 300ms mdc-ripple-fg-radius-in, 400ms mdc-ripple-fg-opacity-out;
            animation: 300ms mdc-ripple-fg-radius-in, 400ms mdc-ripple-fg-opacity-out; }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded--foreground-unbounded-activation::after {
    -webkit-transform: scale(var(--mdc-ripple-fg-scale));
            transform: scale(var(--mdc-ripple-fg-scale));
    -webkit-transition: opacity 110ms linear, -webkit-transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
    transition: opacity 110ms linear, -webkit-transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
    transition: opacity 110ms linear, transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
    transition: opacity 110ms linear, transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms, -webkit-transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
    opacity: 1; }
  .mdc-ripple-surface--primary.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded--foreground-unbounded-deactivation::after {
    -webkit-animation: mdc-ripple-fg-unbounded-opacity-deactivate var(--mdc-ripple-fg-unbounded-opacity-duration) linear, mdc-ripple-fg-unbounded-transform-deactivate var(--mdc-ripple-fg-unbounded-transform-duration) cubic-bezier(0.4, 0, 0.2, 1);
            animation: mdc-ripple-fg-unbounded-opacity-deactivate var(--mdc-ripple-fg-unbounded-opacity-duration) linear, mdc-ripple-fg-unbounded-transform-deactivate var(--mdc-ripple-fg-unbounded-transform-duration) cubic-bezier(0.4, 0, 0.2, 1); }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded::before, .mdc-ripple-surface--accent.mdc-ripple-upgraded::after {
    background-color: #3f51b5;
    background-color: var(--mdc-theme-primary, #3f51b5); }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded::before {
    background-color: rgba(255, 64, 129, 0.14);
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    -webkit-transform: scale(var(--mdc-ripple-fg-scale));
            transform: scale(var(--mdc-ripple-fg-scale));
    -webkit-transition: opacity 200ms linear;
    transition: opacity 200ms linear;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
    @supports (background-color: color(green a(10%))) {
      .mdc-ripple-surface--accent.mdc-ripple-upgraded::before {
        background-color: color(var(--mdc-theme-accent, #ff4081) a(14%)); } }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active::before {
    opacity: .99999; }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active:active::before {
    -webkit-transition-duration: 600ms;
            transition-duration: 600ms; }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded.mdc-ripple-upgraded--background-bounded-active-fill::before {
    -webkit-transition-duration: 120ms;
            transition-duration: 120ms;
    opacity: 1; }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before {
    top: var(--mdc-ripple-top);
    left: var(--mdc-ripple-left);
    width: var(--mdc-ripple-fg-size);
    height: var(--mdc-ripple-fg-size); }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded::after {
    background-color: rgba(255, 64, 129, 0.14);
    position: absolute;
    top: 0;
    left: 0;
    width: var(--mdc-ripple-fg-size);
    height: var(--mdc-ripple-fg-size);
    -webkit-transform: scale(0);
            transform: scale(0);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: ""; }
    @supports (background-color: color(green a(10%))) {
      .mdc-ripple-surface--accent.mdc-ripple-upgraded::after {
        background-color: color(var(--mdc-theme-accent, #ff4081) a(14%)); } }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after {
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after {
    top: var(--mdc-ripple-top);
    left: var(--mdc-ripple-left);
    -webkit-transform-origin: center center;
            transform-origin: center center; }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-bounded-active-fill::after {
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards;
    -webkit-animation: 300ms mdc-ripple-fg-radius-in, 400ms mdc-ripple-fg-opacity-out;
            animation: 300ms mdc-ripple-fg-radius-in, 400ms mdc-ripple-fg-opacity-out; }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded--foreground-unbounded-activation::after {
    -webkit-transform: scale(var(--mdc-ripple-fg-scale));
            transform: scale(var(--mdc-ripple-fg-scale));
    -webkit-transition: opacity 110ms linear, -webkit-transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
    transition: opacity 110ms linear, -webkit-transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
    transition: opacity 110ms linear, transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
    transition: opacity 110ms linear, transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms, -webkit-transform var(--mdc-ripple-fg-unbounded-transform-duration) linear 80ms;
    opacity: 1; }
  .mdc-ripple-surface--accent.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded--foreground-unbounded-deactivation::after {
    -webkit-animation: mdc-ripple-fg-unbounded-opacity-deactivate var(--mdc-ripple-fg-unbounded-opacity-duration) linear, mdc-ripple-fg-unbounded-transform-deactivate var(--mdc-ripple-fg-unbounded-transform-duration) cubic-bezier(0.4, 0, 0.2, 1);
            animation: mdc-ripple-fg-unbounded-opacity-deactivate var(--mdc-ripple-fg-unbounded-opacity-duration) linear, mdc-ripple-fg-unbounded-transform-deactivate var(--mdc-ripple-fg-unbounded-transform-duration) cubic-bezier(0.4, 0, 0.2, 1); }
